---
- name: Migrate AWX Job Templates to AAP (single or bulk)
  hosts: pilotserver
  gather_facts: no
  vars:
    # Survey inputs
    awx_host: "{{ survey_awx_host }}"
    awx_token: "{{ survey_awx_token }}"
    aap_host: "{{ survey_aap_host }}"
    aap_token: "{{ survey_aap_token }}"
    organization_id: "{{ survey_aap_organization_id }}"
    template_id: "{{ survey_template_id | default('') }}"
    include_regex: "{{ survey_include_regex | default('') }}"
    exclude_regex: "{{ survey_exclude_regex | default('') }}"
    verify_tls: "{{ survey_verify_tls | default(false) }}"
    dry_run: "{{ survey_dry_run | default(false) }}"

    # Additional survey toggles/overrides (if you expose them)
    force_ee_id: "{{ survey_force_ee_id | default(5) }}"
    force_machine_cred_id: "{{ survey_force_machine_cred_id | default(31) }}"
    with_notifications: "{{ survey_with_notifications | default(true) }}"
    notif_secrets_file: "{{ survey_notif_secrets_file | default('') }}"
    with_schedules: "{{ survey_with_schedules | default(true) }}"

  tasks:
    - name: Ensure migrator is present
      ansible.builtin.copy:
        src: files/migrate_job_templates.py
        dest: ./migrate_job_templates.py
        mode: '0755'

    - name: Build argv for JT migrator
      ansible.builtin.set_fact:
        jt_args: >-
          {{
            [
              'python3','./migrate_job_templates.py',
              '--awx-host', awx_host,
              '--awx-token', awx_token,
              '--aap-host', aap_host,
              '--aap-token', aap_token,
              '--organization-id', (organization_id | string),
              '--force-ee-id', ((force_ee_id | int) | string),
              '--force-machine-cred-id', ((force_machine_cred_id | int) | string)
            ]
            + ( ['--template-id', (template_id | string)] if (template_id | default('') | string | length) > 0 else ['--all'] )
            + ( ['--with-notifications'] if with_notifications | bool else [] )
            + ( ['--notif-secrets-file', notif_secrets_file] if (notif_secrets_file | default('') | string | length) > 0 else [] )
            + ( ['--with-schedules'] if with_schedules | bool else [] )
            + ( ['--dry-run'] if (dry_run | bool) else [] )
            + ( ['--verify-tls'] if (verify_tls | bool) else [] )
          }}

    - name: Run JT migration
      ansible.builtin.command:
        argv: "{{ jt_args }}"
      register: migrate_cmd
      no_log: false

    # -------- Receipt construction --------
    - name: Extract NDJSON events from stdout (one JSON per line)
      ansible.builtin.set_fact:
        migration_events_raw: >-
          {{
            migrate_cmd.stdout.splitlines()
            | select('search', '^\\{')
            | list
          }}

    - name: Parse events and write pretty JSON receipt
      vars:
        parsed_events: "{{ migration_events_raw | map('from_json') | list }}"
      block:
        - name: Show parsed events (human-readable)
          ansible.builtin.debug:
            msg: "{{ parsed_events | to_nice_json }}"

        - name: Save parsed events to file (target host)
          ansible.builtin.copy:
            dest: "./migration_events.json"
            content: "{{ parsed_events | to_nice_json }}"
            mode: '0644'